43일차 강의 

래퍼클래스(Wrapper Class)

오토박싱 자동 형변환


(실습)

2019년02월25일

1단계 난이도. 2020년02월25일

2단계. 2019년02월28일

3단계. 2020년05월16일


문자열 때문에 이게 어렵다면?

"300" "200"
을 더하여 500이라는 값이 나오도록 하라

혜선씨꺼 참고하라
파일명 WrapperEx2
----------------------------------------------

객체지향이란?

클래스와 메서드로 분리하여 
하나가 바뀌면 다 바뀌도록(재사용성이 높도록)
하는것이 객체지향의 시작이다

클래스에 있는 함수를 유용하게 활용할줄 알아야한다. - 객체지향을 준비하는 시발점


-------------------------------------------------

예외처리(Exception handling)

프로그램 오류

프로젝트명: ExceptionStudy


try{
  //예외가 발생할 가능성이 있는 문장들을 넣는다
}catch (Exception e1){
  // Exception1 이 발생했을 경우, 이를 처리하기 위한 문장을 적는다
}catch (Exception e2){
  // Exception2 이 발생했을 경우, 이를 처리하기 위한 문장을 적는다
}...
}catch (Exception n){
  // ExceptionN이 발생했을 경우, 이를 처리하기 위한 문장을 적는다
}

catch는 수백, 수천개
하나하나하나 다 처리가능 하다.

-----------------

(실습)

0부터 10까지

-----------------------

예외처리
정의 - 프로그램 실행시 발생할 수 있는 예외의 발생에 대비한 코드를 작성하는 것
목적 - 프로그램의 비정상 종료를 막고,
정상적인 실행상태를 유지하는 것


@ try블럭 내에서 예외가 발생한 경우,
1. 발생한 예외와 일치하는 catch블럭이 있는지 확인한다.
2. 일치하는 catch블럭을 찾게되면, 그 catch 블럭 내의 문장들을 수행하고 전체  try-catch문을 빠져나가서 그 다음 문장을 계속해서 수행한다.
만일 일치하는 catch블럭을 찾지 못하면, 예외는 처리되지 못한다.

@ try블럭 내에서 예외가 발생하지 않는 경우
1. catch블럭을 거치지 않고 전체 try-catch문을 빠져나가서 수행을 계속한다.

@  try문을 적었으면 catch문을 꼭 적어야한다

---------------------------------------------

printStackTrace()
예외발생 당시의 호출스택에 있었던 메서드의 정보와 예외 메시지를 화면에 출력한다

getMessage()
발생한 예외클래스의 인스턴스에 저장된 메시지를 얻을 수 있다.

--------------------------------------------

사용자의 입력을 받는다
오로지 숫자만
nextInt();

문자열 값을 입력하였을때 오류가 없이 프로그램은 수행되어야 한다


--------------------------------------------------

컴파일러가 예외처리를 확인하지 않는
RuntimeException 클래스들(자식클래스)은
unchecked예외 라고 부르고
예외처리를 확인하는 Exception클래스들은
checked 예외라고 부른다


-----------------------------------------------

논리오류는 코드짜는 사람의 실수
(함수나 식이 잘못되어있는 경우 등)
이건 디버깅으로 잡는다

------------------------------------------------

예외를 처리하는 방법
1. try-catch

2. throws
[표현식]

반환타입 메서드명() throws Exception1, Exception2, ...
ExceptionN {
	// 메서드 내용
}


--------------------------------

예외를 메서드의 throws에 명시하는 것은
예외를 처리하는 것이 아니라,
자신(예외가 발생할 가능성이 있는 메서드)를
호출한 메서드에게 예외를 전달하는 예외처리를 떠맡기는 것이다


-----------------------------------------------

내가 이전에 짯던 코드들을

문자열과 메서드를 이용하여
객체지향으로 짜보자
(짝수 홀수나, 구구단 같은것들)
