
38일차 강의

[ 접근 제어자 ]

private
자식도 가져와서 사용할수 없다 




[ 접근 번위 ]

public > protected > (default) > private
넓다			    좁다




자바 3대 특징
상속, 캡슐화, 다형성





[ 접근 제어자를 이용한 캡슐화 ]
클래스나 멤버, 주로 멤버(변수, 메서드)에 접근 제어자를 사용하는 이유는 클래스의 내부에 선언된 데이터를 보호하기 위해서이다. 

데이터가 유효한 값을 유지하도록(중요! validateion), 
또는 비밀번호와 같은 데이터를 외부에서 함부로 변경하지 못하도록 하기 위해서는(해킹방지) 외부로부터의 접근을 제한하는 것이 필요하다.

이것을 데이터 감추기(data hiding)라고 하며,
객체지향개념의 캡슐화(encapsulation)에 해당하는 내용이다.

또 다른 이유는 클래스 내에서만 사용되는,
내부 작업을 위해 임시로 사용되는 멤버변수나
부분작업을 처리하기 위한 메서드 등의 멤버들을 
클래스 내부에 감추기 위해서이다.
외부에서 접근할 필요가 없는 멤버들을 private으로 지정하여 외부에 노출시키지 않음으로써 복잡성을 줄일 수 있다.

요약
접근 제어자를 사용하는 이유
- 외부로부터 데이터를 보호하기 위해서
- 외부에는 불필요한, 내부적으로만 사용되는, 
부분을 감추기 위해서



--------------------------------------------------

자바프로젝트명: ShoppingMall

패키지명
shop
products.tv


[ 설계 ]

@ 클래스 3개를 만든다


>>DigitalShop 가전제품가게
String shopName 가게이름
]
Tv
보여준다 제품을
void showProducts(){

}

제품을 판매한다
void sellProduct(Customer customer){

}





>>costomer  고객
String name 이름
int money 소지금
Tv

나의 정보를 보여준다
void myInfoView(){

}




>>Tv
String name  tv명
int price 가격

나의 정보를 보여준다
void myInfoView(){

}



디지털샵은 하나만 존재한다
사람은 하나만 존재한다
Tv도 하나만 존재한다


가게에서 Tv 정보를 알려준다
사람은 그 정보를 봤다
구매하러 간다

구매했다

끝

------------------

>>모델링 했을때 

원 초록색 의미: public으로 만들었다는 것

네모 빨강 : private
마름모 빨강: protected
세모 파랑: default


[ 모델링 해석 ]
관계의 표현 - 인스턴스변수에 대한

+tv
0..1

>>고객은 티비를 가질수 있다
0 또는 1개를


+tv
0..1

>>디지털샵은 티비를 가질수 있다
0 또는 1개


메엔이 초록 원 위의 빨간 s 의미: static


------------------------------------------------

(실습) 프로젝트명 DiceGame

주사위	한번 던지면 1에서 6까지가 나온다

플레이어 주사위를 가질수있다
	플레이어 정보를 출력하는 메서드

!!!!의미 해석!!!!!
가진다(필수),
가질수 있다(선택)

보드판(룰) 	주사위 숫자의 총합
주사위 합계가 15이상이면
 경기는 끝난다

메인 내용
주사위는 스스로 던질수 없다
오직 플레이어만이 던질 수 있다

보드판은 주사위나 플레이어를 가질수 없다
보드판은 클래스가 따로 필요하다
보드판은 1개만 있다


@개념적 행위가 발생하면 - 메서드
그냥 이런저런게 있다 - 인스턴스 변수


--------------------------------------------

프로젝트명: ProjectParam

클래스명: 
Apple
Human


>>사과
color
이름


>>사람
이름
나이

---------------------------------------------

과제: 

변수와 메서드
기본형 매개변수 참조형 매개변수
참조형 반환타입

남궁성의 강의
