34일차 강의


TextNode 는 마지막 자식 - 얘 밑엔 아무것도 없다
이건  setAttribute 못한다

파일: DomControl3

div id='h1Container'

이 태그 안에
h1태그 "새로 만들어진 태그1"를 추가하시오 




@ 웹프로젝트를 배포 할때는 (팀프로젝트할때)
expert -> WAR file 형식으로 배포해야한다

캡처 26번

export source file 에 체크하면
팀원같으면 체크하여 코드 수정이 가능하도록하고
배포만 하는거면 여기에 체크하지않아야 내코드를 수정하거나 하지못하는것
체크하지않아도  실행은 가능하다

@ import -> WAR file





파일: DomControl4 시리즈

태그 삭제
선택 요소.removeChild(선택 요소2);
선택 요소의 자식인 선택 요소2를 삭제

부모에서 자식을 지우는 것!!!!!!!!!!!!!



-----------------------------------------------------------

프로젝트명: FormStudy
파일 basic.jsp
	basic.js

basic.js 만들기(js만 쓸수있는 파일)
new - file 로 만들어 뒤에 확장자만 직접 적어주면됨




!!!!!!!중요!!!!!!!!!!
!!! 100프로 알아야 시험해결 가능!!!!
파일 FormDocumentWrite


</span> 은 인라인의 특징가짐, 여러개 사용 가능






obj.innerHTML = str;

!!!알아야!!!!!!!!!!!!!!!!!!!!!!!!!!!!

innerHTML  
모든 태그에 다 존재한다( br, hr 단일로 끝나는 태그들 제외하고)





(실습)
파일: FormTest


함수명 끝에는 Fnc를 붙이자



파일 DomModelBasic1_1
DomModelBasic1_2

추가버튼을 누르면 





------------------

파일: FormDocumentWrite.jsp
FormDocumentWrite1_1

if문 확인
validation 체크
조건문의 시작


ctrl + h : 검색??



---------------------------------

배열에 . 을 찍을수 없다
배열[0] . 의  단수형태를 가져야 .을 찍을수있다


체이닝 메서드
체인코드
(재사용성 낮다, 경험자가 아닌이상 어려워함)


@ 코드는 간결, 이해가 쉽게


 ----------------------------------------------
차이점

<button>
만 눌러도 마치 submit을 누른거 처럼 화면이 전환된다
(우리눈에 보이지는 않지만 묵시적으로 submit이 있는것과 같음)
하지만 form 태그를 없애면 화면 전환이 되지않음
>>조심히 사용해야한다
제어하기 힘들기 때문에


<input type="button" value=""> 과의 차이점
만 누른다고 해서 화면이 전환되지는 않는다
보통 인풋타입 버튼을 주로 사용한다


onclick 안에는 여러가지 함수를 작성 가능하다




[페이지전환]
a
form button, submit


----------------------------------------------

문자열

문자열의 초기값

String = null
String = "";

null을 다룰때는 조심해야된다
(데이터베이스를 떠올려라)


"" 과 null 은 같지않다

alert("" == null); 하면 false 라고 뜬다  

-----------------------------------------
float을 사용하려면
clear도 알아야한다

>> 블럭과 인라인의 특징을 다 파괴한다


---------------------------------------------

onclick
을 넣은 태그가 있다면
그 태그안에 속하는 어느 곳을 클릭해도 onclick이 실행되는 것이다


-------------------------------------------------

<input type="reset" value="취소" onclick="resetFnc();">


라고 한다면

onclick먼저 수행되고(명시적으로 적었으니)
reset이 수행된다

하지만 resetFnc라는 함수가 실제로 없다면 실행화면은 문제가 없으나 디버깅해보면 취소버튼 누르는만큼 오류갯수가 증가한다
resetFnc라고 함수를 만들면 함수를 꼭 사용해야한다

function resetFnc {  }
이렇게 비어있는 함수더라도
그래야 오류가 뜨지않고 오류갯수 증가도 나타나지않음



---------------------------------------

name은 예약어 이다

그러므로 문자열이라고 하더라도
id = "name" 이라고 사용하는 것도 피해야한다


예약어 - id, name, class

>> 미래를 위해서도 예약어를 벗어나는 문자열을 사용해야한다

-------------------------------------------------

모든건 함수단위로 움직여야한다
객체 단위  
---------------------------------------------------

